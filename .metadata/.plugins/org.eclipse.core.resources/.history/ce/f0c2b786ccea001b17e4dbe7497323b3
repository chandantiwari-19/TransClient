package trans.controller;

import static trans.constant.TransliterationConstant.REV_API_KEY;
import static trans.constant.TransliterationConstant.REV_APPNAME;
import static trans.constant.TransliterationConstant.REV_APP_ID;
import static trans.constant.TransliterationConstant.cat_delfault;
import static trans.constant.TransliterationConstant.contentLanguage;
import static trans.constant.TransliterationConstant.domain;
import static trans.constant.TransliterationConstant.platform;
import static trans.constant.TransliterationConstant.sourceLanguage;
import static trans.constant.TransliterationConstant.targetLanguage;
import static trans.constant.TransliterationConstant.xForwardedFor;
import static trans.constant.TransliterationConstant.xRapidapiHost;
import static trans.constant.TransliterationConstant.transliteration;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import trans.constant.TransliterationConstant;
import trans.model.TransliterationPayload;
import trans.response.TransliterationResponseElement;

@RestController
public class ClientController {
	
	@Autowired 
	private RestTemplate restTemplate;

	
	@GetMapping("/trans")
	public ResponseEntity<TransliterationResponseElement> hello(@RequestBody TransliterationPayload body,
			@RequestHeader(REV_API_KEY) String revApiKey,
			@RequestHeader(REV_APP_ID) String revAppId,
			@RequestHeader(REV_APPNAME) String revAppName,
			@RequestHeader(sourceLanguage) String srcLang,
			@RequestHeader(targetLanguage) String tgtLang,
			@RequestHeader(contentLanguage) String cntLang,
			@RequestHeader(platform) String pltform,
			@RequestHeader(domain) Integer domain,
			@RequestHeader(name= xForwardedFor, required = false) String xForwardHeader,
			@RequestHeader(name= xRapidapiHost, required = false) String xRapidapiHost
			) {
		
		

		if(domain == null) {
			String[] dom= xRapidapiHost.split("-");
			if(TransliterationConstant.rapidApiReverseDomainMap.get(dom[2]) == null)
				domain= TransliterationConstant.rapidApiReverseDomainMap.get(cat_delfault);
			}

		if (revAppName == null)
			revAppName = "none";

		int httpStatus = 200;
		
		HttpServletRequest request;

		String ip = xForwardHeader;// LaasUtils.getIpAddress(request);
		if (ip == null) {
			  request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
			ip = request.getRemoteHost();
		}
		MultiValueMap<String, Object> map= new LinkedMultiValueMap<String, Object>();
		map.add(REV_API_KEY, revApiKey);
		map.add(REV_APP_ID, revAppId);
		map.add(REV_APPNAME, revAppName);
		map.add(sourceLanguage, srcLang);
		map.add(targetLanguage, tgtLang);
		map.add(contentLanguage, cntLang);
		map.add(platform, pltform);
		map.add(TransliterationConstant.domain, domain.toString());
		map.add(xForwardedFor, ip);
		
		
		HttpEntity entity = new HttpEntity(body, map);
		
		
		return restTemplate.exchange(transliteration, HttpMethod.GET, entity,TransliterationResponseElement.class);
	
		
	}
}
